#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "bignum.h"
#include "rsa.h"

#define __DEBUG__
#define _RSA

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char** argv) {

	BigInt num1;
	BigInt num2;
//	BigInt* ret;

#ifdef _BIGNUM
	char number1[MAX], number2[MAX];

	scanf("%s",number1);
	scanf("%s", number2);
	
	strcpy(num1.num,number1);
	
	num1.sign = '1';
	num1.digit = strlen(num1.num);
	
	strcpy(num2.num,number2);
	num2.sign = '1';
	num2.digit = strlen(num2.num);
	
	BigInt result;
	
	result = BigIntSub(num1, num2);
	if(result.sign == '0')
		printf("-%s, %c, %d", result.num,result.sign,result.digit);
	else{
		printf("%s, %c, %d", result.num,result.sign,result.digit);
	}
	
#endif
	
//	BigInt midNum,fixNum;
//	BigInt * rst;
//	rst = (BigInt*)malloc(sizeof(BigInt)); 
//	
//	midNum = generatePrime();
//	printf("%s\t%d\n", midNum.num,strlen(midNum.num));
//	
//	strcpy(fixNum.num, "2");
//	fixNum.digit = 1;
//	fixNum.sign = '1';
//	printf("%s\t%d\n", fixNum.num,strlen(fixNum.num));
//	
//	rst = BigIntAdd(midNum, fixNum);
//	printf("%s\t%d\n", rst->num, rst->digit);

#ifdef _RSA

	publicKey* pub_key;
	privateKey* pri_key;

	pub_key = (publicKey*)malloc(sizeof(publicKey));
	pri_key = (privateKey*)malloc(sizeof(privateKey));

	generate_keys(pub_key, pri_key);
#endif
	return 0;
}
